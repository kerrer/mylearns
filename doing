Zookeeper是一个用户维护配置信息、命名、分布式同步以及分组服务的集中式服务框架，它使用Java语言编写，通过Zab协议来保证节点的一致性。因为Zookeeper是一个CP型系统，所以当网络分区问题发生时，系统就不能注册或查找服务。

Doozer是一个一致性的、分布式存储系统，使用Go语言编写，通过Paxos来保证强一致性，Doozer项目目前已经停止更新并有将近160个分支。和Zookeeper一样，Doozer也是一个CP型系统，在网络分区问题发生时，会有同样的问题。

etcd是一个用于共享配置和服务发现的高可用的键值存储系统，使用Go语言编写，通过Raft来保证一致性，有基于HTTP+JSON的API接口。etcd也是一个强一致性系统，但是etcd似乎支持从non-leaders中读取数据以提高可用性；另外，写操作仍然需要leader的支持，所以在网络分区时，写操作仍可能失败。
